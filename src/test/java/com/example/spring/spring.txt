1、spring的作用域
  常见的spring的作用域通常是指spring的bean是singleton还是prototype
  区别：
     <1>当spring的作用域为singleton时，spring容器在容器启动阶段就已经把bean实例创建出来了，并且只会存在一个共享的bean实例。
     <2>当spring的作用域为prototype时，spring容器只有在获取bean的时候创建一个bean的实例，并且每次获取的时候都创建不
     同的bean实例。

2、spring中bean的生命周期

   spring中bean的生命周期主要分为以下几个过程  bean的创建 ---- bean的初始化  ----- bean的销毁


3、spring的后置处理器BeanPostProcessor，该类为一个接口，需要实现类实现postProcessBeforeInitialization
   和postProcessAfterInitialization方法


4、spring创建bean，初始化bean，销毁bean和bean后置处理器的执行顺序

             spring实例化bean

             spring对bean对象属性进行赋值

             spring对对象的依赖进行注入

             BeanPostProcessor前置处理（postProcessBeforeInitialization方法）

             检查是否实现了InitializingBean接口，若果实现了该接口则调用接口的初始化方法

             检查是否有自定义的初始化方法，若有，则调用自定义的初始化方法

             BeanPostProcessor前置处理（postProcessAfterInitialization方法）

             后面和前面类似，都是一些销毁方法的执行，包括实现spring提供的接口和自定义的销毁方法，执行顺序和
             初始化的执行顺序一致。

5、spring给属性注入依赖的几种方式
    <1> @Autowired默认按照类型注入bean，如果bean的类型有多个，则按照变量名去装配bean，找不到则报错

    <2> @Qualifier按照指定的bean的id去装配bean，找不到则报错

    <3> @Resource结合了上面两个注解的功能，默认按照将变量名作为id去装配bean，找不到则按照类型装配


